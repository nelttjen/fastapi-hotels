version: "3.8"

services:
  redis:
    image: redis:7.2.1-alpine3.18
    container_name: fastapi-redis-hotels-prod
    restart: unless-stopped
    ports:
      - "6379:6379"
    expose:
      - 6379
    networks:
      - redis

  mongodb:
    image: mongo:7.0.0-rc6-jammy
    container_name: fastapi-mongodb-hotels-prod
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - 27017
    volumes:
      - mongodb_data:/data/db
      - ./docker/prod/mongo/init_mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    env_file:
      - .env-prod
    networks:
      - mongodb

  postgresdb:
    image: postgres:15.4-alpine3.18
    container_name: fastapi-postgres-hotels-prod
    restart: unless-stopped
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env-prod
    networks:
      - database

  pgadmin:
    image: dpage/pgadmin4
    container_name: fastapi-pgadmin-hotels-prod
    restart: unless-stopped
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - .env
    networks:
      - database
    depends_on:
      - postgresdb

  celery:
    build:
      context: .
      dockerfile: docker/prod/app/Dockerfile
    container_name: fastapi-celery-hotels-prod
    restart: unless-stopped
    command:
      - poetry
      - run
      - celery
      - -A
      - src.celery_conf.celery:celery_app
      - worker
      - --loglevel=INFO
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
    networks:
      - database
      - redis
      - mongodb
    depends_on:
      - redis
      - postgresdb
      - mongodb

  flower:
    image: mher/flower
    container_name: fastapi-flower-hotels-prod
    restart: unless-stopped
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - FLOWER_PORT=443
    networks:
      - database
      - redis
      - mongodb
    depends_on:
      - celery
    ports:
      - "8080:443"

  application:
    container_name: fastapi-application-hotels-prod
    build:
      context: .
      dockerfile: docker/prod/app/Dockerfile
    networks:
      - database
      - redis
      - mongodb
    depends_on:
      - mongodb
      - redis
      - postgresdb
    environment:
      - MODE=PROD
    ports:
      - "80:8000"
    entrypoint: "entrypoint.sh"

volumes:
  postgres_data:
    name: "postgres-fastapi-hotels-prod"
  pgadmin_data:
    name: "pgadmin-fastapi-hotels-prod"
  mongodb_data:
    name: "mongodb-fastapi-hotels-prod"

networks:
  database:
    driver: bridge
    name: "database_network-hotels-prod"
  redis:
    driver: bridge
    name: "redis_network-hotels-prod"
  mongodb:
    driver: bridge
    name: "mongodb_network-hotels-prod"
